const t="lifesync_guest_account",e="lifesync_guest_data",n="lifesync_offline_user",s="lifesync_offline_data",i="lifesync_sync_queue",a="lifesync_offline_status",r=6048e5;class GuestAccountService{constructor(){this.statusListeners=new Set,this.offlineStatusListeners=new Set,this.statusCheckInterval=null,this.syncRetryInterval=null,this.currentStatus=null,this.currentOfflineStatus=null,this.isOnline=navigator.onLine,this.startStatusChecks(),this.startNetworkMonitoring(),this.currentStatus=this.getGuestAccountStatus(),this.currentOfflineStatus=this.getOfflineStatus()}static getInstance(){return GuestAccountService.instance||(GuestAccountService.instance=new GuestAccountService),GuestAccountService.instance}generateGuestId(){return`guest_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}createGuestAccount(n,s,i){const a=Date.now(),l={id:this.generateGuestId(),displayName:n,email:s,createdAt:a,expiresAt:a+r,renewalCount:0,profileData:{securityPin:(null==i?void 0:i.pin)||null,usePassword:(null==i?void 0:i.usePassword)||!1,migrationType:"local_account"}};return localStorage.setItem(t,JSON.stringify(l)),localStorage.setItem(e,JSON.stringify({})),this.notifyListeners(),l}getGuestAccount(){const e=localStorage.getItem(t);if(!e)return null;const n=JSON.parse(e);return n.expiresAt<Date.now()?null:n}isGuestUser(){return null!==this.getGuestAccount()}getGuestAccountStatus(){const t=this.getGuestAccount(),e=Date.now();if(!t)return{isGuest:!1,account:null,isExpired:!1,isExpiringSoon:!1,daysRemaining:0,hoursRemaining:0,percentageRemaining:0,canRenew:!1,renewalCount:0};const n=t.expiresAt-e,s=n<=0,i=!s&&n<=864e5,a=Math.ceil(n/864e5),l=Math.ceil(n/36e5),o=Math.max(0,n/r*100);return{isGuest:!0,account:t,isExpired:s,isExpiringSoon:i,daysRemaining:Math.max(0,a),hoursRemaining:Math.max(0,l),percentageRemaining:o,canRenew:!0,renewalCount:t.renewalCount}}renewGuestAccount(){const e=localStorage.getItem(t);if(!e)return null;const n=JSON.parse(e),s=Date.now();return n.expiresAt=s+r,n.renewalCount+=1,n.lastRenewalAt=s,localStorage.setItem(t,JSON.stringify(n)),this.notifyListeners(),n}saveGuestData(t,n){if(!this.isGuestUser())return;const s=this.getGuestData();s[t]=n,localStorage.setItem(e,JSON.stringify(s))}getGuestData(t){const n=localStorage.getItem(e);if(!n)return t?void 0:{};const s=JSON.parse(n);return t?s[t]:s}getAllGuestData(){return this.getGuestData()}updateGuestProfile(e){const n=localStorage.getItem(t);if(!n)return;const s=JSON.parse(n);s.profileData={...s.profileData,...e},localStorage.setItem(t,JSON.stringify(s)),this.notifyListeners()}getDataForMigration(){const t=this.getGuestAccount();if(!t)return null;return{guestAccount:t,guestData:this.getAllGuestData(),timestamp:Date.now()}}clearGuestAccount(){localStorage.removeItem(t),localStorage.removeItem(e),localStorage.removeItem("lifesync_guest_expiry_check"),this.notifyListeners()}onGuestAccountStatusChange(t){return this.statusListeners.add(t),()=>{this.statusListeners.delete(t)}}getCurrentOfflineStatus(){return this.currentOfflineStatus}startNetworkMonitoring(){window.addEventListener("online",()=>{this.isOnline=!0,this.handleNetworkChange(!0)}),window.addEventListener("offline",()=>{this.isOnline=!1,this.handleNetworkChange(!1)}),this.startSyncRetry()}handleNetworkChange(t){this.updateOfflineStatus(),t&&this.attemptSync()}getOfflineStatus(){const t=this.getOfflineUserData(),e=this.getSyncQueue(),n=localStorage.getItem(a);return{isOnline:this.isOnline,isAuthenticated:!!t,isOfflineMode:!!(null==t?void 0:t.isOfflineMode),hasPendingSync:e.length>0,lastSyncAttempt:n?parseInt(n):null,syncQueueLength:e.length}}updateOfflineStatus(){const t=this.getOfflineStatus();(!this.currentOfflineStatus||this.currentOfflineStatus.isOnline!==t.isOnline||this.currentOfflineStatus.isOfflineMode!==t.isOfflineMode||this.currentOfflineStatus.hasPendingSync!==t.hasPendingSync)&&(this.currentOfflineStatus=t,this.notifyOfflineListeners(t))}enableOfflineMode(t,e,i){const a={userId:t,displayName:e,email:i,lastOnlineSync:Date.now(),isOfflineMode:!0,pendingSync:!1};localStorage.setItem(n,JSON.stringify(a)),localStorage.setItem(s,JSON.stringify({})),this.updateOfflineStatus()}disableOfflineMode(){const t=this.getOfflineUserData();t&&(t.isOfflineMode=!1,localStorage.setItem(n,JSON.stringify(t))),this.updateOfflineStatus()}getOfflineUserData(){const t=localStorage.getItem(n);return t?JSON.parse(t):null}isOfflineMode(){const t=this.getOfflineUserData();return!!(null==t?void 0:t.isOfflineMode)}saveOfflineData(t,e){if(!this.isOfflineMode())return;const n=this.getOfflineData();n[t]=e,localStorage.setItem(s,JSON.stringify(n)),this.markPendingSync()}getOfflineData(t){const e=localStorage.getItem(s);if(!e)return t?void 0:{};const n=JSON.parse(e);return t?n[t]:n}getAllOfflineData(){return this.getOfflineData()}queueSyncOperation(t){const e={id:`sync_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,timestamp:Date.now(),retryCount:0,...t},n=this.getSyncQueue();n.push(e),localStorage.setItem(i,JSON.stringify(n)),this.markPendingSync()}getSyncQueue(){const t=localStorage.getItem(i);return t?JSON.parse(t):[]}markPendingSync(){const t=this.getOfflineUserData();t&&(t.pendingSync=!0,localStorage.setItem(n,JSON.stringify(t))),this.updateOfflineStatus()}async attemptSync(){if(!this.isOnline||!this.isOfflineMode())return;const t=this.getSyncQueue();if(0!==t.length){localStorage.setItem(a,Date.now().toString());try{await this.processSyncOperations(t),localStorage.setItem(i,JSON.stringify([]));const e=this.getOfflineUserData();e&&(e.lastOnlineSync=Date.now(),e.pendingSync=!1,localStorage.setItem(n,JSON.stringify(e))),this.updateOfflineStatus()}catch(e){}}}async processSyncOperations(t){for(const e of t)await new Promise(t=>setTimeout(t,100))}startSyncRetry(){this.syncRetryInterval&&clearInterval(this.syncRetryInterval),this.syncRetryInterval=setInterval(()=>{if(this.isOnline&&this.isOfflineMode()){this.getSyncQueue().length>0&&this.attemptSync()}},3e4)}onOfflineStatusChange(t){return this.offlineStatusListeners.add(t),()=>{this.offlineStatusListeners.delete(t)}}notifyOfflineListeners(t){this.offlineStatusListeners.forEach(e=>{try{e(t)}catch(n){}})}clearOfflineData(){localStorage.removeItem(n),localStorage.removeItem(s),localStorage.setItem(i,JSON.stringify([])),localStorage.removeItem(a),this.updateOfflineStatus()}getOfflineAnalytics(){const t=this.getOfflineUserData();if(!t)return null;const e=localStorage.getItem(a),n=this.getSyncQueue(),s=JSON.stringify(this.getAllOfflineData()).length,i=e?Date.now()-parseInt(e):null;return{isOfflineMode:t.isOfflineMode,syncQueueLength:n.length,lastSyncAttempt:e?parseInt(e):null,offlineDataSize:s,timeSinceLastSync:i}}notifyListeners(){const t=this.getGuestAccountStatus();this.currentStatus=t,this.statusListeners.forEach(e=>{try{e(t)}catch(n){}})}startStatusChecks(){this.statusCheckInterval&&clearInterval(this.statusCheckInterval),this.statusCheckInterval=setInterval(()=>{const t=this.currentStatus,e=this.getGuestAccountStatus();if(t&&e){(t.isExpiringSoon!==e.isExpiringSoon||t.isExpired!==e.isExpired||t.daysRemaining!==e.daysRemaining||t.isGuest!==e.isGuest)&&this.notifyListeners()}},6e4)}stopStatusChecks(){this.statusCheckInterval&&(clearInterval(this.statusCheckInterval),this.statusCheckInterval=null),this.syncRetryInterval&&(clearInterval(this.syncRetryInterval),this.syncRetryInterval=null)}exportGuestData(){const t=this.getGuestAccount(),e=this.getAllGuestData();return JSON.stringify({account:t,data:e,exportedAt:(new Date).toISOString()},null,2)}importGuestData(n){try{const s=JSON.parse(n);return!(!s.account||!s.data)&&(localStorage.setItem(t,JSON.stringify(s.account)),localStorage.setItem(e,JSON.stringify(s.data)),this.notifyListeners(),!0)}catch(s){return!1}}getAnalytics(){const t=this.getGuestAccount();if(!t)return null;const e=Date.now()-t.createdAt,n=JSON.stringify(this.getAllGuestData()).length;return{isGuest:!0,accountAge:e,renewalCount:t.renewalCount,dataSize:n,sessionId:t.id}}}const l=GuestAccountService.getInstance();export{l as g};
